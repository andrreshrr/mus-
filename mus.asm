; А-08-18 Оськин Андрей
; 18 Вариант
.model small	; один сегмент кода, данных и стека
.stack 100h		; 256 байт под стек
.data
	;частоты
        freqs dw 392, 440, 494, 587, 523, 0, 392, 415, 466, 523, 294, 0, 349, 415, 392, 349, 311, 349, 392, 370, 392, 523, 0FFFFh 
        ;длительности воспроизведения частот
	times db  1,   1,   1,   3,   3,  3,  1,   1,   1,   3 ,  3,  3,  1,   1,    1 , 4,   1,  1,    3 ,  2,   1,   7,    0
        multi db 200    ;число мс на четверть

.code

	main:
;-------------------начальная инициализация--------------------------------------------------------------------

        mov ax,@data    
        mov ds,ax       ;DS - на начало сегмента данных

;-------------------установка режима работы таймера--------------------------------------------------------------------
        
	mov al,10110110b ;
	;выбор счетчика 2 6-7=10
	;посл загр начального знач сначала младший байт потом старший байт 5-4=11
	;режим работы 3 3-2-1=011 генератор меандра
	;двоичный счетчик 0=0
        out 43h,al       

;---------------------------------------------------------------------------------------

        lea bx, times   ;загрузка эф. адреса массива длительностей 
        push bx		;сохранение его в стеке
        lea bx, freqs   ;загрузка эф. адреса массива длительностей
        push bx		

;---------------------------------------------------------------------------------------

		
	main_sound: 				;метка начала вопроизведения ноты
	;--------------------------включение динамика----------------------------------------
	in al,61h       
	or al,3         ;установка битов включения динамика 
	out 61h,al      ;установка управляющих сигналов динамика
	;------------------------------------------------------------------------------------
        pop bx          ;вытаскиваем из стека адрес частоты
        mov ax, [bx]    ;заносим значение по адресу в AX 

        cmp ax, 0FFFFh  ;если частота = FFFF, то это последняя нота
        je exit 

	cmp ax, 0h  	;если частота = 0, то это пауза																											
	jne melody      

		pause:					
		;--------------------------проигрывание паузы----------------------------------------																						
			in al,61h       
        		and al,11111100b
        		out 61h,al
																									  
			mov cx, bx      ;сохранение адреса частоты в CX
			pop bx          ;помещение в BX адреса интервала времени
			mov al, [bx]
			mov ah, 0    
			inc bx          ;увеличиваем адрес интервала времени на 1
			push bx         
			      
			add cx,2	;увеличиваем адрес частоты на 2
			push cx   
      
			mul multi       ;AX = AL * MULTI 
			call suspension      																															
			jmp main_sound  ;переход в начало цикла
		
		;--------------------------проигрывание ноты-----------------------------------------	
		melody:        			
			call K_Value
					
			out 42h,al      ;выводим младший байт
			mov al, ah      ;готовим старший к выводу
			out 42h,al      ;выводим старший байт

			mov cx, bx      ;сохраним адрес частоты
			pop bx          ;вытаскиваем из стека адрес количества четвертей
			mov al, [bx]    ;и получаем их значение
			mov ah, 0
			inc bx          ;увеличиваем адрес количества четвертей на 1
			push bx         ;заносим в стек 
			
			add cx,2	;увеличиваем адрес частоты на 2
			push cx	
		
			mul multi       ;AX = AL * MULTI 
			call suspension      ;организуем задержку																																	
			jmp main_sound  ;переход воспроизведению следующей ноты
					
		;----------------------------выход из программы в DOS--------------------------------------	
				
		exit:

			in al,61h
        		and al,11111100b
        		out 61h,al 	;выключение динамика

        		mov ah, 8
	        	int 21h
        		mov ah,4ch      ;выход из программы
        		int 21h

	;---------------------------------задержка------------------------------------------------------------------
	suspension proc              
		mov di, 1000    
		mul di          ; DX:AX=CX*AX (в AX длительность ноты * multi)
		mov cx, dx      ; в регистр CX старший байт
		mov dx, ax      ; в 
		mov ax, 8600h
		int 15h         ; при ah=86, CX:DX - number of microseconds to wait (only accurate to 977 us)

		in al,61h       
        	and al,11111100b
        	out 61h,al

		mov cx, 0		;пауза между нотами
		mov dx, 10000	
		mov ax, 8600h
		int 15h
		    
		
		ret                     
	endp
	;----------------------------------вычисление K-------------------------------------------------------------
	K_value proc 
		mov di, ax      ;частота в DI
		mov dx, 12h     ;десятичное число 1190000 соответсвует 
		mov ax, 2870h	;шестнадцатеричное число 122870h
		div di          ;DX:AX / DI = AX
		ret
	endp

end main
